---
# configmap for apollo-portal-server
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: dev
  name: apollo-min-portalserver
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://mysql-min.mysql-min:3306/ApolloPortalDB?characterEncoding=utf8
    # mysql username
    spring.datasource.username = apollo
    # mysql password
    spring.datasource.password = admin
    spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
  apollo-env.properties: |
    dev.meta=http://service-apollo-config-server-dev.apollo-min:8080
    #fat.meta=http://service-apollo-config-server-test-alpha.sre:8080
    #uat.meta=http://service-apollo-config-server-test-beta.sre:8080
    #pro.meta=http://service-apollo-config-server-prod.sre:8080

---
metadata:
  name: apollo-min-portalserver-nodeport
  labels:
    app: apollo-min-portalserver-nodeport
  namespace: dev
spec:
  selector:
    app: apollo-min-portalserver
  ports:
    - protocol: TCP
      port: 8070
      targetPort: 8070
      nodePort: 30001
      name: apollo-min-portalserver-nodeport-8070
  type: NodePort
  sessionAffinity: ClientIP
kind: Service
apiVersion: v1

---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: apollo-min-portalserver
  namespace: dev
  labels:
    app: apollo-min-portalserver
    wayne-app: apollo-min
    wayne-ns: dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apollo-min-portalserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apollo-min-portalserver
        wayne-app: apollo-min
        wayne-ns: dev
    spec:
      volumes:
        - name: volume-configmap-apollo-portal-server
          configMap:
            name: apollo-min-portalserver
            items:
              - key: application-github.properties
                path: application-github.properties
              - key: apollo-env.properties
                path: apollo-env.properties
      initContainers:
        - image: 'hpy253215039/alpine-bash:v3.8'
          name: check-service-apollo-admin-server-dev
          command:
            - bash
            - '-c'
            - >-
              curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1
              --retry-max-time 120 apollo-min-portalserver-nodeport.dev:8090
      containers:
        - image: 'hpy253215039/apollo-portal-server:v1.4.0'
          securityContext:
            privileged: true
          imagePullPolicy: IfNotPresent
          name: container-apollo-portal-server
          ports:
            - protocol: TCP
              containerPort: 8070
          volumeMounts:
            - name: volume-configmap-apollo-portal-server
              mountPath: /apollo-portal-server/config/application-github.properties
              subPath: application-github.properties
            - name: volume-configmap-apollo-portal-server
              mountPath: /apollo-portal-server/config/apollo-env.properties
              subPath: apollo-env.properties
          env:
            - name: APOLLO_PORTAL_SERVICE_NAME
              value: service-apollo-portal-server.apollo-min
          readinessProbe:
            tcpSocket:
              port: 8070
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 8070
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 1
            failureThreshold: 10
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              memory: 1Gi
              cpu: '0.1'
      dnsPolicy: ClusterFirst
      restartPolicy: Always

