
---
# configmap for apollo-config-server-dev
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: dev
  name: apollo-min-configserver
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://mysql-min.mysql-min:3306/DevApolloConfigDB?characterEncoding=utf8
    spring.datasource.username = apollo
    spring.datasource.password = admin
    #否则会报错：'hibernate.dialect' not set
    spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
    #为了节省资源，这里只配置一个容器
    eureka.service.url = http://statefulset-apollo-config-server-dev-0.service-apollo-meta-server-dev:8080/eureka/
    #eureka.service.url = http://statefulset-apollo-config-server-dev-0.service-apollo-meta-server-dev:8080/eureka/,http://statefulset-apollo-config-server-dev-1.service-apollo-meta-server-dev:8080/eureka/,http://statefulset-apollo-config-server-dev-2.service-apollo-meta-server-dev:8080/eureka/

---
metadata:
  name: apollo-min-configserver-clusterip
  labels:
    app: apollo-min-configserver-clusterip
  namespace: dev
spec:
  selector:
    app: apollo-min-configserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      name: apollo-min-configserver-clusterip-8080
  type: ClusterIP
  clusterIP: None
  sessionAffinity: ClientIP
kind: Service
apiVersion: v1
  

---
metadata:
  name: apollo-min-configserver-nodeport
  labels:
    app: apollo-min-configserver-nodeport
  namespace: dev
spec:
  selector:
    app: apollo-min-configserver
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30002
      name: apollo-min-configserver-nodeport-8080
  type: NodePort
  sessionAffinity: ClientIP
kind: Service
apiVersion: v1


---
kind: StatefulSet
apiVersion: apps/v1beta2
metadata:
  name: apollo-min-configserver
  namespace: dev
  labels:
    app: apollo-min-configserver
    wayne-app: apollo-min
    wayne-ns: apollo-min
spec:
  serviceName: service-apollo-meta-server-dev
  replicas: 1
  selector:
    matchLabels:
      app: apollo-min-configserver
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apollo-min-configserver
        wayne-app: apollo-min
        wayne-ns: apollo-min
    spec:
      volumes:
        - name: volume-configmap-apollo-config-server-dev
          configMap:
            name: apollo-min-configserver
            items:
              - key: application-github.properties
                path: application-github.properties
      containers:
        - image: 'hpy253215039/apollo-config-server:v1.4.0'
          securityContext:
            privileged: true
          imagePullPolicy: IfNotPresent
          name: container-apollo-config-server-dev
          ports:
            - protocol: TCP
              containerPort: 8080
          volumeMounts:
            - name: volume-configmap-apollo-config-server-dev
              mountPath: /apollo-config-server/config/application-github.properties
              subPath: application-github.properties
          env:
            - name: APOLLO_CONFIG_SERVICE_NAME
              value: service-apollo-config-server-dev.apollo-min
          readinessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 10
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              memory: 1Gi
              cpu: '0.1'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
