
---
# configmap for apollo-admin-server-dev
kind: ConfigMap
apiVersion: v1
metadata:
  namespace: dev
  name: apollo-min-adminserver
data:
  application-github.properties: |
    spring.datasource.url = jdbc:mysql://mysql-min.mysql-min:3306/DevApolloConfigDB?characterEncoding=utf8
    spring.datasource.username = apollo
    spring.datasource.password = admin
    #否则报错：'hibernate.dialect' not set
    spring.jpa.database-platform = org.hibernate.dialect.MySQL5Dialect
    #为了节约资源，这里只部署一个容器
    eureka.service.url = http://statefulset-apollo-config-server-dev-0.service-apollo-meta-server-dev:8080/eureka/
    #eureka.service.url = http://statefulset-apollo-config-server-dev-0.service-apollo-meta-server-dev:8080/eureka/,http://statefulset-apollo-config-server-dev-1.service-apollo-meta-server-dev:8080/eureka/,http://statefulset-apollo-config-server-dev-2.service-apollo-meta-server-dev:8080/eureka/

---
metadata:
  name: apollo-min-adminserver-clusterip
  labels:
    app: apollo-min-adminserver-clusterip
  namespace: dev
spec:
  selector:
    app: apollo-min-adminserver
  ports:
    - protocol: TCP
      port: 8090
      targetPort: 8090
      name: apollo-min-adminserver-clusterip-8090
  type: ClusterIP
  sessionAffinity: ClientIP
kind: Service
apiVersion: v1


---
kind: Deployment
apiVersion: apps/v1beta2
metadata:
  name: apollo-min-adminserver
  namespace: dev
  labels:
    app: apollo-min-adminserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apollo-min-adminserver
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: apollo-min-adminserver
        wayne-app: apollo-min
        wayne-ns: dev
    spec:
      volumes:
        - name: volume-configmap-apollo-admin-server-dev
          configMap:
            name: apollo-min-adminserver
            items:
              - key: application-github.properties
                path: application-github.properties
      initContainers:
        - image: 'hpy253215039/alpine-bash:v3.8'
          name: check-service-apollo-config-server-dev
          command:
            - bash
            - '-c'
            - >-
              curl --connect-timeout 2 --max-time 5 --retry 60 --retry-delay 1
              --retry-max-time 120
              apollo-min-configserver-clusterip.dev:8080
      containers:
        - image: 'hpy253215039/apollo-admin-server:v1.4.0'
          securityContext:
            privileged: true
          imagePullPolicy: IfNotPresent
          name: container-apollo-admin-server-dev
          ports:
            - protocol: TCP
              containerPort: 8090
          volumeMounts:
            - name: volume-configmap-apollo-admin-server-dev
              mountPath: /apollo-admin-server/config/application-github.properties
              subPath: application-github.properties
          env:
            - name: APOLLO_ADMIN_SERVICE_NAME
              value: service-apollo-admin-server-dev.apollo-min
          readinessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            failureThreshold: 10
          livenessProbe:
            tcpSocket:
              port: 8090
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 1
            failureThreshold: 10
          resources:
            limits:
              cpu: '1'
              memory: 1Gi
            requests:
              memory: 1Gi
              cpu: '0.1'
      dnsPolicy: ClusterFirst
      restartPolicy: Always
